<Window
    x:Class="VStreamPlayer.MVVM.Views.PlayListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:VStreamPlayer.MVVM.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:VStreamPlayer.Assets.UserControls"
    Title="PlayListView"
    Width="600"
    Height="400"
    MinWidth="500"
    Background="Transparent"
    Closing="Window_Closing"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    Loaded="Window_Loaded"
    MouseLeftButtonDown="Window_MouseLeftButtonDown"
    WindowStyle="None"
    mc:Ignorable="d">
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="0"
            NonClientFrameEdges="None"
            ResizeBorderThickness="3" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{DynamicResource SecondaryColorBrush}"
                    BorderBrush="{DynamicResource MainColorBrush}"
                    BorderThickness="1"
                    CornerRadius="0" />
                <Border
                    Grid.Column="0"
                    Margin="1"
                    Background="{DynamicResource SecondaryColorBrush}"
                    BorderBrush="{DynamicResource MainColorBrush}"
                    BorderThickness="0,0,1,0"
                    CornerRadius="0" />
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    Fill="{DynamicResource TextColorBrush}" />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border
                x:Name="PART_ContentHost"
                Background="Transparent"
                Focusable="False" />
        </ControlTemplate>

        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                ClickMode="Press"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Template="{StaticResource ComboBoxToggleButton}" />
                            <StackPanel Orientation="Horizontal">
                                <Label>
                                    <Label.Content>
                                        <userControls:Sort WidthAndHeight="20" Color="{DynamicResource TextColorBrush}" />
                                    </Label.Content>
                                </Label>
                                <ContentPresenter
                                    Name="ContentSite"
                                    Margin="3,3,23,3"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="False" />
                            </StackPanel>

                            <TextBox
                                x:Name="PART_EditableTextBox"
                                Margin="3,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Focusable="True"
                                Foreground="{DynamicResource TextColorBrush}"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                Visibility="Hidden" />

                            <Popup
                                Name="Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">

                                <Grid
                                    Name="DropDown"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    SnapsToDevicePixels="True">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="{DynamicResource SecondaryColorBrush}"
                                        BorderBrush="{DynamicResource MainColorBrush}"
                                        BorderThickness="1" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false" />
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers />
        </Style>

        <!--  SimpleStyles: ComboBoxItem  -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource SecondaryColorBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type TabControl}">
            <Setter Property="BorderBrush" Value="{DynamicResource MainColorBrush}" />
            <Setter Property="BorderThickness" Value="1,0,1,1" />
            <Setter Property="TabStripPlacement" Value="Top" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="{DynamicResource SecondaryColorBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid
                            ClipToBounds="True"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Name="ColumnDefinition0" />
                                <ColumnDefinition Name="ColumnDefinition1" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Name="RowDefinition0" Height="Auto" />

                                <RowDefinition Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <!--  Header  -->
                            <Border
                                x:Name="HeaderBorder"
                                Grid.ColumnSpan="2"
                                Margin="0,0,0,0"
                                Background="{DynamicResource SecondaryColorBrush}"
                                BorderBrush="{DynamicResource MainColorBrush}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="0">
                                <TabPanel
                                    Name="HeaderPanel"
                                    Panel.ZIndex="1"
                                    IsItemsHost="True"
                                    KeyboardNavigation.TabIndex="1" />
                            </Border>

                            <!--  Content panel  -->
                            <Grid
                                Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="0,0,0,0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <Border
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter
                                        Name="PART_SelectedContentHost"
                                        Margin="0"
                                        Content="{TemplateBinding SelectedContent}"
                                        ContentSource="SelectedContent"
                                        ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                        ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                                <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,5,0,0" />
                            </Trigger>
                            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                                <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                                <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                                <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,0,5,0" />
                            </Trigger>
                            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                                <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                                <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                                <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="5,0,0,0" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Header tab item style  -->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="{DynamicResource SecondaryColorBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border
                            x:Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource FourthColorBrush}"
                            BorderThickness="1,1,1,0">
                            <ContentPresenter
                                Margin="5"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                TextBlock.Foreground="{DynamicResource TextColorBrush}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WindowTitleForeColorOnMouseOver}" />
                                <Setter Property="Background" Value="{DynamicResource MainColorBrush}" />

                            </Trigger>

                            <!--  MouseOver Background  -->
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ThirdColorBrush}" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  Close Button  -->
        <Button
            x:Name="BtnClose"
            Width="20"
            Height="20"
            Margin="0,4,4,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Panel.ZIndex="999"
            Click="BtnClose_Click"
            Style="{DynamicResource TitleCloseButtonStyle}" />

        <TabControl
            x:Name="PlayList"
            Grid.Row="0"
            Button.Click="Button_Click">
            <TabControl.Resources>
                <Style TargetType="Label">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </TabControl.Resources>

            <TabItem Header="{DynamicResource PlayListString}">
                <Label />
            </TabItem>
            <TabItem Header="{DynamicResource MyConnectionString}">
                <Label />
            </TabItem>
            <TabItem Header="{DynamicResource PlayHistoryString}">
                <Label />
            </TabItem>
        </TabControl>

        <Grid Grid.Row="1" Background="{DynamicResource TextColorBrushLight}">
            <userControls:SearchBar x:Name="UserSearchBar" InputText="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}">
                <userControls:SearchBar.Style>
                    <Style TargetType="userControls:SearchBar">
                        <Setter Property="Margin" Value="5" />
                    </Style>
                </userControls:SearchBar.Style>
            </userControls:SearchBar>
        </Grid>


        <Label
            Grid.Row="2"
            Padding="10"
            HorizontalContentAlignment="Center"
            Background="{DynamicResource SecondaryColorBrush}">
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">

                <!--  Add Button  -->
                <Button x:Name="BtnAdd" Click="BtnAdd_Click">
                    <Button.Content>
                        Add
                    </Button.Content>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="{DynamicResource SecondaryColorBrush}" />
                            <Setter Property="Padding" Value="0,3,3,3" />
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{DynamicResource MainColorBrush}"
                                            BorderThickness="1">
                                            <StackPanel Orientation="Horizontal">

                                                <!--  Icon for Button  -->
                                                <Label Foreground="{TemplateBinding Foreground}">
                                                    <Label.Content>
                                                        <userControls:Add WidthAndHeight="20" Color="{DynamicResource TextColorBrush}" />
                                                    </Label.Content>
                                                </Label>

                                                <!--  Button Content  -->
                                                <ContentPresenter
                                                    Margin="{TemplateBinding Padding}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                                    TextBlock.Foreground="{TemplateBinding Foreground}" />
                                            </StackPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource WindowTitleBackColor}" />
                                                <Setter Property="Foreground" Value="{DynamicResource WindowTitleForeColorOnMouseOver}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <!--  Delete Button  -->
                <Button x:Name="BtnDelete" Click="BtnDelete_Click">
                    <Button.Content>
                        Delete
                    </Button.Content>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="10,0,0,0" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="{DynamicResource SecondaryColorBrush}" />
                            <Setter Property="Padding" Value="0,3,3,3" />
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{DynamicResource MainColorBrush}"
                                            BorderThickness="1">
                                            <StackPanel Orientation="Horizontal">

                                                <!--  Icon for Button  -->
                                                <Label Foreground="{TemplateBinding Foreground}">
                                                    <Label.Content>
                                                        <userControls:Delete WidthAndHeight="20" Color="{DynamicResource TextColorBrush}" />
                                                    </Label.Content>
                                                </Label>

                                                <!--  Button Content  -->
                                                <ContentPresenter
                                                    Margin="{TemplateBinding Padding}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                                    TextBlock.Foreground="{TemplateBinding Foreground}" />
                                            </StackPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource WindowTitleBackColor}" />
                                                <Setter Property="Foreground" Value="{DynamicResource WindowTitleForeColorOnMouseOver}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <!--#region-->
                <!--<Button>
                    <Button.Content>
                        Sort
                    </Button.Content>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="10,0,0,0" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="{DynamicResource SecondaryColorBrush}" />
                            <Setter Property="Padding" Value="0,3,3,3" />
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{DynamicResource MainColorBrush}"
                                            BorderThickness="1">
                                            <StackPanel Orientation="Horizontal">

                -->
                <!--  Icon for Button  -->
                <!--
                                                <Label Foreground="{TemplateBinding Foreground}">
                                                    <Label.Content>
                                                        <userControls:Sort WidthAndHeight="20" Color="{DynamicResource TextColorBrush}" />
                                                    </Label.Content>
                                                </Label>

                -->
                <!--  Button Content  -->
                <!--
                                                <ContentPresenter
                                                    Margin="{TemplateBinding Padding}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                                    TextBlock.Foreground="{TemplateBinding Foreground}" />
                                            </StackPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource WindowTitleBackColor}" />
                                                <Setter Property="Foreground" Value="{DynamicResource WindowTitleForeColorOnMouseOver}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>-->
                <!--#endregion-->

                <ComboBox
                    x:Name="CboSort"
                    Margin="10,0,0,0"
                    SelectionChanged="CboSort_SelectionChanged"
                    Style="{DynamicResource ComboBoxStyle}">
                    <ComboBoxItem IsSelected="True">Added time(Asc)</ComboBoxItem>
                    <ComboBoxItem>Added time(Desc)</ComboBoxItem>
                    <ComboBoxItem>Name(Asc)</ComboBoxItem>
                    <ComboBoxItem>Name(Desc)</ComboBoxItem>
                    <ComboBoxItem>Size(Asc)</ComboBoxItem>
                    <ComboBoxItem>Size(Desc)</ComboBoxItem>
                    <ComboBoxItem>Duration(Asc)</ComboBoxItem>
                    <ComboBoxItem>Duration(Desc)</ComboBoxItem>
                </ComboBox>

            </StackPanel>
        </Label>

    </Grid>

</Window>

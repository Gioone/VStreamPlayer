<Window
    x:Class="VStreamPlayer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:command="clr-namespace:VStreamPlayer.Commands"
    xmlns:convert="clr-namespace:VStreamPlayer.Convert.ValueConverter;assembly=VStreamPlayer.Convert"
    xmlns:core="clr-namespace:VStreamPlayer.Core;assembly=VStreamPlayer.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:VStreamPlayer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:VStreamPlayer.Assets.UserControls"
    Title="{DynamicResource WindowTitleString}"
    Width="560"
    Height="400"
    MinWidth="550"
    MinHeight="300"
    AllowDrop="True"
    AllowsTransparency="True"
    Background="{DynamicResource WindowBackColor}"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    Drop="Window_Drop"
    KeyDown="Window_KeyDown"
    Loaded="Window_Loaded"
    MouseLeftButtonDown="Window_MouseLeftButtonDown"
    MouseMove="Window_MouseMove"
    ResizeMode="CanResize"
    SizeChanged="Window_SizeChanged"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Storyboard x:Key="ControlDisplayStoryboard" Duration="0:0:.1">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" />
        </Storyboard>

        <convert:PlaybackOrderValueConverter x:Key="PlaybackOrderConverter" />

        <convert:IsVideoInfoEnableConverter x:Key="IsVideoInfoEnableConverter" />


        <Style TargetType="MenuItem">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border BorderThickness="0">
                            <Grid
                                Width="{TemplateBinding Width}"
                                Height="24"
                                Background="{DynamicResource SecondaryColorBrush}"
                                ToolTip="{TemplateBinding Header}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" MinWidth="80" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{DynamicResource WindowBackColor}" BorderThickness="0" />
                                <Border
                                    x:Name="_border"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="0" />

                                <!--  Menu icon  -->

                                <Image
                                    x:Name="_imgicon"
                                    Width="12"
                                    Height="12"
                                    Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                    Stretch="Uniform" />
                                <TextBlock
                                    x:Name="_txt"
                                    Grid.Column="1"
                                    Margin="5,0,15,0"
                                    VerticalAlignment="Center"
                                    Style="{DynamicResource NormalTextBlockStyle}"
                                    Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" />

                                <!--  Arrow  -->

                                <Path
                                    x:Name="_path"
                                    Grid.Column="1"
                                    Margin="5,13,5,0"
                                    HorizontalAlignment="Right"
                                    Data="M0,4 4,0 0,-4 z"
                                    Fill="{DynamicResource TextColorBrush}"
                                    Visibility="Collapsed" />

                                <!--  Sub Menu  -->

                                <Popup
                                    x:Name="SubMenuPopup"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                                    Placement="Right">
                                    <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <Border
                                            Name="SubmenuBorder"
                                            Background="{DynamicResource SecondaryColorBrush}"
                                            BorderBrush="{DynamicResource MainColorBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Border>
                                    </ScrollViewer>
                                </Popup>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="true">
                                <Setter TargetName="_path" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="_border" Property="Background" Value="{DynamicResource MainColorBrush}" />
                                <Setter TargetName="_txt" Property="Foreground" Value="{DynamicResource TextColorBrush}" />
                                <Setter TargetName="_path" Property="Fill" Value="{DynamicResource TextColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="_txt" Property="Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--  Menu  -->
        <ContextMenu x:Key="MyMenu">
            <ContextMenu.Style>
                <Style TargetType="ContextMenu">
                    <Setter Property="Focusable" Value="False" />
                </Style>
            </ContextMenu.Style>

            <MenuItem Click="MenuItemOpenFile_Click" Header="打开文件" />

            <MenuItem Header="播放">
                <MenuItem Click="MenuItemPlayOrPause_Click" Header="播放/暂停" />
                <MenuItem Header="上一首" />
                <MenuItem Click="MenuItemNext_Click" Header="下一首" />
                <MenuItem Header="快进 5 秒" />
                <MenuItem Header="后退 5 秒" />
                <Separator />
                <MenuItem Header="倍速播放">
                    <MenuItem Click="MenuItemAccelerateVideoPlayback_Click" Header="加快 0.25 倍" />
                    <MenuItem Click="MenuItemDecelerateVideoPlayback_Click" Header="减速 0.25 倍" />
                    <MenuItem Header="手动设置倍速..." />
                </MenuItem>
            </MenuItem>


            <!--  Volume plus, volume sub, volume mute  -->
            <MenuItem Header="音量">
                <MenuItem Header="音量+" />
                <MenuItem Header="音量-" />
                <MenuItem Header="静音" />
            </MenuItem>
            <MenuItem Header="视频">
                <MenuItem Header="水平翻转" />
                <MenuItem Header="垂直翻转" />
                <MenuItem Header="视频旋转">
                    <MenuItem Click="MenuItemRotate90_Click" Header="旋转90°" />
                    <MenuItem Header="旋转180°" />
                    <MenuItem Header="旋转270°" />
                    <MenuItem Header="旋转任意度数..." />
                    <MenuItem Click="RotateRestoreItem_Click" Header="还原" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="截图" />
            <MenuItem Click="MaximizeItem_Click" Header="全屏" />
            <MenuItem Header="播放列表" />
            <MenuItem Header="主题" />
            <MenuItem Header="语言" />
            <MenuItem Header="设置" />
            <MenuItem
                Click="VideoInfoItem_Click"
                Header="视频信息"
                IsEnabled="{Binding CurrentVideoPath, Converter={StaticResource IsVideoInfoEnableConverter}}" />
            <MenuItem Click="AboutItem_Click" Header="关于" />
        </ContextMenu>

    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="0"
            NonClientFrameEdges="None"
            ResizeBorderThickness="3" />
    </WindowChrome.WindowChrome>

    <Grid x:Name="LayoutArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="34" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  Window Title and Icon And Buttons  -->
        <Grid
            x:Name="GridWindowTitle"
            Panel.ZIndex="999"
            Background="Transparent"
            MouseLeftButtonDown="GridWindowTitle_MouseLeftButtonDown">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                </Style>
            </Grid.Style>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--  Icon  -->
            <Viewbox Height="18" Margin="10,0,0,0">
                <uc:LogoWithText TextSize="100" />
            </Viewbox>
            <!--  Title  -->
            <TextBlock
                x:Name="TxtVideoTitle"
                Grid.Column="1"
                Margin="5,0,5,0"
                Style="{DynamicResource WindowTitleStyle}"
                Text="{Binding Title, Mode=OneWay}" />

            <StackPanel
                Grid.Column="2"
                HorizontalAlignment="Right"
                Orientation="Horizontal">

                <!--  On Top Button  -->
                <ToggleButton
                    x:Name="TglBtnOnTop"
                    Click="TglBtnOnTop_Click"
                    Style="{DynamicResource TitlePinnedPinnedOffToggleButtonStyle}"
                    ToolTipService.InitialShowDelay="50" />

                <!--  Minimized Button  -->
                <Button
                    x:Name="BtnMinimize"
                    Margin="10,0,0,0"
                    Click="BtnMinimize_Click"
                    Style="{DynamicResource TitleMinimizeButtonStyle}"
                    ToolTip="{DynamicResource WindowTitleMinimumString}"
                    ToolTipService.InitialShowDelay="50">
                    <Viewbox Stretch="Uniform">
                        <Path
                            Data="M0 9.5v-3H42v3Z"
                            Fill="{DynamicResource WindowTitleForeColor}"
                            StrokeEndLineCap="Round"
                            StrokeStartLineCap="Round"
                            StrokeThickness="3" />
                    </Viewbox>
                </Button>

                <!--  Windowed and Borderless  -->
                <Button
                    x:Name="BtnWindowed"
                    Click="BtnWindowed_Click"
                    Style="{DynamicResource TitleWindowedButtonStyle}"
                    ToolTip="{DynamicResource WindowTitleWindowed}"
                    ToolTipService.InitialShowDelay="50" />

                <!--  Maximized Button  -->
                <Button
                    x:Name="BtnMax"
                    Margin="5,0,0,0"
                    Click="BtnMax_Click"
                    Style="{DynamicResource TitleMaximizeButtonStyle}"
                    ToolTip="{DynamicResource WindowTitleMaximizeOrRestoreString}"
                    ToolTipService.InitialShowDelay="50" />

                <!--  Close Button  -->
                <Button
                    x:Name="BtnClose"
                    Margin="5,0,0,0"
                    Click="BtnClose_Click"
                    Style="{DynamicResource TitleCloseButtonStyle}"
                    ToolTip="{DynamicResource WindowTitleCloseString}"
                    ToolTipService.InitialShowDelay="50" />
            </StackPanel>
        </Grid>

        <!--  Logo  -->
        <Grid
            x:Name="Logo"
            Grid.Row="1"
            Panel.ZIndex="900"
            Background="{DynamicResource PlayAreaBackColor}"
            ContextMenu="{DynamicResource MyMenu}"
            MouseLeftButtonDown="Logo_MouseLeftButtonDown">

            <Viewbox Height="72">
                <uc:LogoWithText TextSize="72" />
            </Viewbox>
        </Grid>
        <!--  Play area  -->
        <Grid
            x:Name="PlayArea"
            Grid.Row="1"
            Background="{DynamicResource PlayAreaBackColor}"
            ContextMenu="{DynamicResource MyMenu}"
            PreviewMouseLeftButtonDown="PlayArea_PreviewMouseLeftButtonDown">
            <MediaElement
                x:Name="MediaMain"
                Panel.ZIndex="1"
                IsMuted="{Binding IsMuted, Mode=OneWay}"
                LoadedBehavior="Manual"
                MediaEnded="MediaMain_MediaEnded"
                MediaFailed="MediaMain_MediaFailed"
                MediaOpened="MediaMain_MediaOpened"
                PreviewMouseLeftButtonDown="MediaMain_MouseLeftButtonDown"
                RenderTransformOrigin=".5,.5"
                Volume=".5">
                <MediaElement.RenderTransform>
                    <TransformGroup>
                        <RotateTransform x:Name="MediaRotate" />
                        <ScaleTransform x:Name="MediaScale" />
                    </TransformGroup>
                </MediaElement.RenderTransform>
            </MediaElement>
        </Grid>

        <!--  Functionality area  -->
        <Grid
            x:Name="GridFunctionality"
            Grid.Row="2"
            Panel.ZIndex="999">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--  Display video thumbnail  -->
            <Popup
                x:Name="PopVideoThumb"
                IsOpen="False"
                Placement="Mouse"
                StaysOpen="True" />

            <Slider
                x:Name="ProgressSlider"
                d:Maximum="100"
                d:Minimum="0"
                d:Value="50"
                Cursor="Hand"
                Focusable="False"
                IsMoveToPointEnabled="False"
                MouseLeave="ProgressSlider_MouseLeave"
                MouseMove="ProgressSlider_MouseMove"
                Template="{DynamicResource SliderHorizontal}"
                Thumb.DragCompleted="MediaSlider_DragCompleted"
                Thumb.DragStarted="MediaSlider_DragStarted"
                ValueChanged="ProgressSlider_ValueChanged" />
            <Grid Grid.Row="1" Margin="0,10,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <StackPanel
                    Margin="10,0,0,0"
                    Orientation="Horizontal"
                    RenderTransformOrigin=".5,.5">

                    <TextBlock
                        x:Name="TxtCurrentTime"
                        Style="{DynamicResource DefaultTextBlockStyle}"
                        Text="00:00:00" />
                    <TextBlock Style="{DynamicResource DefaultTextBlockStyle}" Text=" / " />
                    <TextBlock
                        x:Name="TxtLastTime"
                        Style="{DynamicResource DefaultTextBlockStyle}"
                        Text="00:00:00" />
                </StackPanel>

                <!--  Play, Pause, Next...  -->
                <StackPanel
                    Grid.Column="1"
                    Margin="20,0,0,0"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal"
                    RenderTransformOrigin=".5,.5">

                    <!--  Zoom in slightly on the UI  -->
                    <StackPanel.RenderTransform>
                        <ScaleTransform ScaleX="1.15" ScaleY="1.15" />
                    </StackPanel.RenderTransform>

                    <!--  Playback order button  -->
                    <Button
                        x:Name="BtnPlaybackOrder"
                        Click="BtnPlaybackOrder_Click"
                        ToolTipService.InitialShowDelay="50">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="ToolTip" Value="{DynamicResource SingleLoopString}" />
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Width" Value="16" />
                                <Setter Property="Height" Value="16" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Foreground" Value="{DynamicResource FunctionalityButtonForeColor}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <uc:Loop WidthAndHeight="{TemplateBinding Width}" Color="{TemplateBinding Foreground}" />

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource FunctionalityButtonForeColorOnMouseOver}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=PlaybackOrder, Converter={StaticResource PlaybackOrderConverter}}" Value="Random play">
                                        <Setter Property="ToolTip" Value="{DynamicResource RandomPlayString}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <uc:Random WidthAndHeight="{TemplateBinding Width}" Color="{TemplateBinding Foreground}" />

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource FunctionalityButtonForeColorOnMouseOver}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=PlaybackOrder, Converter={StaticResource PlaybackOrderConverter}}" Value="Sequential play">
                                        <Setter Property="ToolTip" Value="{DynamicResource SequentialPlayString}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <uc:Sequential WidthAndHeight="{TemplateBinding Width}" Color="{TemplateBinding Foreground}" />

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource FunctionalityButtonForeColorOnMouseOver}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button
                        x:Name="BtnMultiplyPlayBackward"
                        Margin="15,0,0,0"
                        Click="BtnMultiplyPlayBackward_Click"
                        MouseRightButtonDown="BtnMultiplyPlayBackward_MouseRightButtonDown"
                        RenderTransformOrigin=".5,.5"
                        Style="{DynamicResource MultiplySpeedPlayBackwardButtonStyle}"
                        ToolTip="{DynamicResource DeceleratePlaybackString}"
                        ToolTipService.InitialShowDelay="50">
                        <Button.RenderTransform>
                            <ScaleTransform ScaleX="-1" />
                        </Button.RenderTransform>
                    </Button>

                    <Button
                        x:Name="BtnBackward"
                        Margin="15,0,0,0"
                        Click="BtnBackward_Click"
                        RenderTransformOrigin=".5,.5"
                        Style="{DynamicResource NextButtonStyle}"
                        ToolTip="{DynamicResource PreviousString}"
                        ToolTipService.InitialShowDelay="50">
                        <Button.RenderTransform>
                            <ScaleTransform ScaleX="-1" />
                        </Button.RenderTransform>
                    </Button>

                    <ToggleButton
                        x:Name="BtnPlayAndPause"
                        Margin="15,0,0,0"
                        Click="BtnPlayAndPause_Click"
                        Style="{DynamicResource PlayPauseToggleButtonStyle}"
                        ToolTipService.InitialShowDelay="50" />
                    <!--<Button Margin="15,0,0,0" Style="{DynamicResource PauseButtonStyle}" />-->

                    <Button
                        x:Name="BtnNext"
                        Margin="15,0,0,0"
                        Click="BtnNext_Click"
                        Style="{DynamicResource NextButtonStyle}"
                        ToolTip="{DynamicResource NextString}"
                        ToolTipService.InitialShowDelay="50" />

                    <Button
                        x:Name="BtnStop"
                        Margin="15,0,0,0"
                        Click="BtnStop_Click"
                        Style="{DynamicResource StopButtonStyle}"
                        ToolTip="{DynamicResource StopString}"
                        ToolTipService.InitialShowDelay="50" />

                    <Button
                        x:Name="BtnMultiplyPlayForward"
                        Margin="15,0,0,0"
                        Click="BtnMultiplyPlayForward_Click"
                        MouseRightButtonDown="BtnMultiplyPlayForward_MouseRightButtonDown"
                        Style="{DynamicResource MultiplySpeedPlayBackwardButtonStyle}"
                        ToolTip="{DynamicResource AcceleratePlaybackString}"
                        ToolTipService.InitialShowDelay="50" />
                </StackPanel>

                <!--  Volume, Settings, Play list...  -->
                <Grid Grid.Column="2">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  Volume  -->
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton
                            IsChecked="{Binding IsMuted, Mode=TwoWay}"
                            Style="{StaticResource MuteUnmuteToggleButtonStyle}"
                            ToolTipService.InitialShowDelay="50" />

                        <Slider
                            x:Name="PbVolume"
                            Width="100"
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Cursor="Hand"
                            IsMoveToPointEnabled="True"
                            Maximum="1"
                            Minimum="0"
                            ToolTipService.InitialShowDelay="50"
                            Value="{Binding ElementName=MediaMain, Path=Volume, Mode=TwoWay}">
                            <Slider.Style>
                                <Style TargetType="Slider">
                                    <Setter Property="Template" Value="{DynamicResource SliderHorizontalVolume}" />
                                </Style>

                            </Slider.Style>
                        </Slider>
                    </StackPanel>

                    <!--  Settings  -->
                    <Button
                        x:Name="BtnSettings"
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Center"
                        Click="BtnSettings_Click"
                        Style="{DynamicResource SettingsButtonStyle}"
                        ToolTip="{DynamicResource SettingsString}"
                        ToolTipService.InitialShowDelay="50" />

                    <!--  Play list  -->
                    <Button
                        Grid.Column="2"
                        Margin="10,0,10,0"
                        HorizontalAlignment="Center"
                        Click="Button_Click"
                        Style="{DynamicResource PlayListStyle}"
                        ToolTip="{DynamicResource PlayListString}"
                        ToolTipService.InitialShowDelay="50" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
